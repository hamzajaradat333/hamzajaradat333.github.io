{"version":3,"sources":["assets/img/logo.png","CharacterDetails/CharacterDetails.js","Header/Header.js","Character/Character.js","Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CharacterDetails","state","characterDetails","isLoading","getCharacterInfo","id","Promise","resolve","axios","get","concat","then","res","console","log","data","_this2","this","props","match","params","setState","react_default","a","createElement","Fragment","style","width","height","class","className","scope","src","image","alt","name","location","species","gender","status","padding","react_router_dom","to","Component","Header","marginBottom","margin","logo","Character","link","onClick","click","Home","characters","charactersCards","pages","getCharacters","prevProps","nextProps","cardsData","length","results","map","character","key","src_Character_Character","aria-label","pervious","current","next","App","src_Header_Header","react_router","path","exact","component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sVCqFzBC,oNA7EbC,MAAQ,CACNC,iBAAkB,GAClBC,WAAU,KAaZC,iBAAmB,SAACC,GACnB,OAAO,IAAIC,QAAQ,SAACC,GAChBC,IACFC,IADE,6CAAAC,OAC+CL,IACjDM,KAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChBR,EAAQK,EAAIG,8FAjBI,IAAAC,EAAAC,KAElBJ,QAAQC,IAAIG,KAAKC,OACjBD,KAAKb,iBAAiBa,KAAKC,MAAMC,MAAMC,OAAOf,IAAIM,KAAK,SAACC,GACpDI,EAAKK,SAAS,CAACnB,iBAAkBU,IACjCI,EAAKK,SAAS,CAAClB,WAAU,uCAqB3B,OACEmB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAEIR,KAAKhB,MAAME,UAoCRmB,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACC,MAAM,QAAQC,OAAO,SAAUC,MAAM,gCApChCP,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOM,UAAU,mBAC3CR,EAAAC,EAAAC,cAAA,SAAOM,UAAU,cACfR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OAAV,aACAT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OAAV,QACAT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OAAV,YACAT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OAAV,WACAT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OAAV,UACAT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OAAV,UACAT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OAAV,SAIJT,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIO,MAAM,OACRT,EAAAC,EAAAC,cAAA,OACEM,UAAU,iCACVE,IAAKf,KAAKhB,MAAMC,iBAAiB+B,MACjCC,IAAI,YAERZ,EAAAC,EAAAC,cAAA,UAAKP,KAAKhB,MAAMC,iBAAiBiC,MACjCb,EAAAC,EAAAC,cAAA,UAAKP,KAAKhB,MAAMC,iBAAiBkC,SAASD,MAC1Cb,EAAAC,EAAAC,cAAA,UAAKP,KAAKhB,MAAMC,iBAAiBmC,SACjCf,EAAAC,EAAAC,cAAA,UAAKP,KAAKhB,MAAMC,iBAAiBoC,QACjChB,EAAAC,EAAAC,cAAA,UAAKP,KAAKhB,MAAMC,iBAAiBqC,QACjCjB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,gBAAd,UAMNR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,MAAMJ,MAAO,CAACc,QAAQ,SACjClB,EAAAC,EAAAC,cAAA,QAAMM,UAAU,gCAA+BR,EAAAC,EAAAC,cAAA,kBAC/CF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,IAAIZ,UAAU,gCAA+BR,EAAAC,EAAAC,cAAA,yCArErCmB,uCCahBC,EAfA,SAAC1B,GAKZ,OACGI,EAAAC,EAAAC,cAAA,OAAKE,MALI,CACRmB,aAAa,OACbC,OAAO,aAIPxB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,IACXR,EAAAC,EAAAC,cAAA,OAAKQ,IAAKe,IAAMb,IAAI,eCKjBc,SAdG,SAAC9B,GAEjB,OACEI,EAAAC,EAAAC,cAAA,YACGN,EAAM+B,KACP3B,EAAAC,EAAAC,cAAA,OAAK0B,QAAShC,EAAMiC,MAAOrB,UAAU,wBACnCR,EAAAC,EAAAC,cAAA,OAAKQ,IAAKd,EAAMe,MAAOC,IAAI,KAC3BZ,EAAAC,EAAAC,cAAA,QAAMM,UAAU,eAAeZ,EAAMiB,UCiE9BiB,6MAlEbnD,MAAQ,CACNoD,WAAY,GACZC,gBAAiB,GACjBpD,iBAAkB,GAClBqD,MAAM,uFANNtC,KAAKuC,8DASeC,EAAUC,GAE9B,OADA7C,QAAQC,IAAI2C,EAAUC,IACf,0CAGO,IAEVC,EAFU3C,EAAAC,KAGdT,IACGC,IADH,kDAAAC,OACyDO,KAAKC,MAAMC,MAAMC,OAAOf,KAC9EM,KAAK,SAACC,GACgC,IAAjCI,EAAKf,MAAMoD,WAAWO,QACxB/C,QAAQC,IAAIF,GACdI,EAAKK,SAAS,CAACgC,WAAYzC,EAAIG,KAAK8C,UACpCF,EAAY/C,EACTG,KACA8C,QACAC,IAAI,SAAAC,GACH,OACEzC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEuB,IAAKD,EAAU1D,GACfqC,GAAE,qBAAAhC,OAAuBqD,EAAU1D,IACnCyB,UAAU,YACVR,EAAAC,EAAAC,cAACyC,EAAD,CAAW5D,GAAI0D,EAAU1D,GAAI8B,KAAM4B,EAAU5B,KAAMF,MAAO8B,EAAU9B,WAI5EjB,EAAKK,SAAS,CAACiC,gBAAiBK,uCAOpC,OACErC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACZb,KAAKhB,MAAMqD,iBAEdhC,EAAAC,EAAAC,cAAA,QAAMM,UAAU,aAChBR,EAAAC,EAAAC,cAAA,OAAK0C,aAAW,2BACd5C,EAAAC,EAAAC,cAAA,MAAIM,UAAU,cACZR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aACbR,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMX,UAAU,YAAYoB,QAASjC,KAAKkD,SAAUzB,GAAG,MAAvD,aAEApB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aACdR,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMX,UAAU,YAAYoB,QAASjC,KAAKmD,QAAS1B,GAAE,OAArD,MAEDpB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aACbR,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOX,UAAU,YAAYoB,QAASjC,KAAKoD,KAAM3B,GAAG,KAApD,oBA5DMC,aCwBJ2B,mLAfX,OAEIhD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACfR,EAAAC,EAAAC,cAAC+C,EAAD,MACEjD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,KAAT,QACApB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KACGlD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvB,IACjC9B,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,UAAWvB,IAC7C9B,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,KAAK,wBAAwBE,UAAW3E,aAfzC2C,aCKEiC,QACW,cAA7BC,OAAOzC,SAAS0C,UAEe,UAA7BD,OAAOzC,SAAS0C,UAEhBD,OAAOzC,SAAS0C,SAAS3D,MACvB,2DCRN4D,IAASC,OAAO1D,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KAAenB,EAAAC,EAAAC,cAACyD,EAAD,OAAyBC,SAASC,eAAe,SDuH1E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3E,KAAK,SAAA4E,GACjCA,EAAaC","file":"static/js/main.7d68ae09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7d67987a.png\";","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport '../CharacterDetails/CharacterDetails.css'\r\n\r\nclass CharacterDetails extends Component {\r\n  characterDetails;\r\n  state = {\r\n    characterDetails: {},\r\n    isLoading:true\r\n  }\r\n  componentDidMount() {\r\n\r\n    console.log(this.props);\r\n    this.getCharacterInfo(this.props.match.params.id).then((res)=>{\r\n        this.setState({characterDetails: res})\r\n        this.setState({isLoading:false})\r\n    })\r\n\r\n  }\r\n  \r\n  \r\n  getCharacterInfo = (id) => {\r\n   return new Promise((resolve)=>{\r\n       axios\r\n    .get(`https://rickandmortyapi.com/api/character/${id}`)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      resolve(res.data)\r\n    })\r\n    \r\n}) \r\n  }\r\n \r\n  render() {\r\n  \r\n        \r\n      return (\r\n        <React.Fragment>\r\n  \r\n          {!this.state.isLoading?<div><table className=\"table text-dark\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Character</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Location</th>\r\n                <th scope=\"col\">Species</th>\r\n                <th scope=\"col\">Gender</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Add</th>\r\n  \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">\r\n                  <img\r\n                    className=\"img img-thumbnail btn btn-dark\"\r\n                    src={this.state.characterDetails.image}\r\n                    alt=\"dsadsa\"></img>\r\n                </th>\r\n                <td>{this.state.characterDetails.name}</td>\r\n                <td>{this.state.characterDetails.location.name}</td>\r\n                <td>{this.state.characterDetails.species}</td>\r\n                <td>{this.state.characterDetails.gender}</td>\r\n                <td>{this.state.characterDetails.status}</td>\r\n                <td className=\"text-success\">Add</td>\r\n  \r\n              </tr>\r\n  \r\n            </tbody>\r\n          </table>\r\n          <div className=\"row\" style={{padding:\"40px\"}}>\r\n              <span className=\"btn btn-success col-sm-6 p-5\"><h1 >Add</h1></span>\r\n              <Link to=\"/\" className=\"btn btn-primary col-sm-6 p-5\"><h1 >Character Select</h1></Link>\r\n          </div>\r\n        </div>:<div style={{width:\"300px\",height:\"300px\"}} class=\"spinner-border text-warning\"></div>}\r\n    \r\n        </React.Fragment>\r\n      )\r\n      \r\n  }\r\n}\r\n\r\nexport default CharacterDetails;","import React  from \"react\";\r\nimport '../Header/Header.css';\r\nimport logo from \"../assets/img/logo.png\"\r\n\r\nconst Header = (props)=>{\r\n    let style = {\r\n        marginBottom:\"50px\",\r\n        margin:\"0px auto\"\r\n    }\r\n    return(\r\n       <div style={style}>\r\n        <div className=\"\">\r\n            <img src={logo} alt=\"Missing\"></img>\r\n        </div>\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Header;\r\n/* {buttons.map(button=>{\r\n    return(\r\n    <button>{button}</button>\r\n    )\r\n})} */","import React from \"react\"\r\nimport \"../Character/Character.css\"\r\n\r\nconst Character = (props) => {\r\n\r\n  return (\r\n    <span >\r\n      {props.link}\r\n      <div onClick={props.click} className=\"card btn btn-warning\">\r\n        <img src={props.image} alt=\"\"></img>\r\n        <span className=\"text-light \">{props.name}</span>\r\n      </div>\r\n    </span>\r\n  )\r\n\r\n}\r\n\r\nexport default Character;","import React, {Component} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport Character from '../Character/Character';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.getCharacters()\r\n  }\r\n  state = {\r\n    characters: [],\r\n    charactersCards: [],\r\n    characterDetails: {},\r\n    pages:12\r\n  }\r\n\r\n  shouldComponentUpdate(prevProps,nextProps){\r\n    console.log(prevProps,nextProps);\r\n    return true\r\n  }\r\n\r\n  getCharacters() {\r\n\r\n    let cardsData\r\n    axios\r\n      .get(`https://rickandmortyapi.com/api/character?page=${this.props.match.params.id}`)\r\n      .then((res) => {\r\n        if (this.state.characters.length === 0) \r\n          console.log(res);\r\n        this.setState({characters: res.data.results})\r\n        cardsData = res\r\n          .data\r\n          .results\r\n          .map(character => {\r\n            return (\r\n              <Link\r\n                key={character.id}\r\n                to={`/characterDetails/${character.id}`}\r\n                className=\"col-sm-2\">\r\n                <Character id={character.id} name={character.name} image={character.image}/>\r\n              </Link>\r\n            )\r\n          })\r\n        this.setState({charactersCards: cardsData})\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          {this.state.charactersCards}\r\n        </div>\r\n        <span className=\"col-sm-12\">\r\n        <nav aria-label=\"Page navigation example\">\r\n          <ul className=\"pagination\">\r\n            <li className=\"page-item\">\r\n             <Link className=\"page-link\" onClick={this.pervious} to=\"/1\">Previous</Link>\r\n            </li>\r\n            {<li className=\"page-item\">\r\n             <Link className=\"page-link\" onClick={this.current} to={`/12`}>1</Link>\r\n            </li>}\r\n            <li className=\"page-item\">\r\n             <Link  className=\"page-link\" onClick={this.next} to=\"/\">Next</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        </span>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\nimport './App.css';\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport CharacterDetails from './CharacterDetails/CharacterDetails';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\n\nclass App extends Component {\n \n\n  \n\n  render() {\n\n    return (\n      \n        <div className=\"App\">\n        <Header></Header>\n          <Link to=\"/\">Home</Link>\n          <Switch>\n             <Route path=\"/\" exact component={Home}/> \n             <Route path=\"/:pageNumber\" exact component={Home}/>  \n            <Route path=\"/characterDetails/:id\" component={CharacterDetails}/>\n          </Switch>\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n/* import $ from 'jquery'; */\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}