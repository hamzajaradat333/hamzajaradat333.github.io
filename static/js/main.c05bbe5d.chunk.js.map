{"version":3,"sources":["assets/img/logo.png","assets/loginBg.gif","Loader/Loader.js","Character/Character.js","Team/Team.js","store/actions/team.js","store/actionList.js","Header/Header.js","CharacterDetails/CharacterDetails.js","store/actions.js","Home/Home.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","props","loader","extra","console","log","type","react_default","a","createElement","class","id","className","style","Fragment","Character","link","onClick","click","src","image","alt","name","connect","state","charactersCards","isLoading","pagenumber","team","dispatch","clearTeam","payload","key","map","member","width","height","isLoggedIn","justifyContent","losgin","login","logo","length","src_Team_Team","remove","CharacterDetails","addCharacterToTeam","character","JSON","parse","localStorage","getItem","find","card","_this","push","setItem","stringify","this","match","params","getCharacharDetails","_this2","src_Header_Header","isLoadingDetails","scope","characterDetails","location","species","gender","status","saveCharaterInTeam","react_router_dom","to","src_Loader_Loader","Component","axios","get","concat","then","res","data","actionsList","Home","willLogin","user","currentPage","getCharacters","pagination","prevProps","nextProps","e","preventDefault","setState","loginUser","onSubmit","placeholder","onChange","handleChange","value","loginBgGif","username","target","pages","numOfPages","parseInt","i","toString","_this3","characterCards","loginForm","aria-label","window","pathname","substr","cardsData","results","src_Character_Character","setChar","App","react_router","path","exact","component","Boolean","hostname","initialState","reducer","arguments","undefined","action","Object","objectSpread","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","myStore","createStore","applyMiddleware","store","next","getState","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c05bbe5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7d67987a.png\";","module.exports = __webpack_public_path__ + \"static/media/loginBg.3a6713d5.gif\";","import React from 'react'\r\nimport \"../Loader/Loader.css\"\r\nfunction Loader (props){\r\n     let loader;\r\n     let extra\r\n     console.log(props.type);\r\n     \r\n          switch (props.type) {\r\n               case \"25\":\r\n                         loader = <div class=\"wrapper\">\r\n                         <ul id=\"ul\">\r\n                             <li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li>\r\n                         </ul>\r\n                     </div>\r\n               break;\r\n               case \"circle\": \r\n                    extra = {}\r\n                    loader = <div className=\"lds-circle center\"><div style={extra}></div></div>\r\n               break;\r\n\r\n               case \"hourglass\":\r\n                    loader = <div className=\"lds-hourglass center\"></div>\r\n               break;\r\n\r\n               default:\r\n                    loader = <div className=\"lds-grid center\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n               break;\r\n          }\r\n     return(\r\n          <React.Fragment>\r\n               {loader}\r\n          </React.Fragment>\r\n     )\r\n}\r\n\r\nexport default Loader","import React from \"react\"\r\nimport \"../Character/Character.css\"\r\n\r\nconst Character = (props) => {\r\n  return (\r\n    <div>\r\n      {props.link}\r\n      <div onClick={props.click}>\r\n        <img src={props.image} alt=\"\" className=\"w-75 h-50 rounded\"></img>\r\n        <div className=\"text-light \">{props.name}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Character;","import React from 'react';\r\nimport '../Team/Team.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as actionsList2 from '../store/actions/team'\r\n\r\nfunction Team(props) {\r\n     let key =1; \r\n    let team = props.team.map(member => {\r\n         key++;\r\n        return (\r\n\r\n               <div key={key} style={{width:\"10%\",height:\"10%\"}}>\r\n                    <img src={member.image} alt=\"\" className=\"w-25 h-50 rounded col-1 myMember\"></img>\r\n                    <div>{member.name}</div>\r\n               </div>\r\n               \r\n\r\n     )\r\n})\r\n     return (\r\n          <React.Fragment>\r\n               {team}\r\n               <span onClick={props.clearTeam}>Clear Team</span>\r\n          </React.Fragment>\r\n     )\r\n\r\n}\r\nconst mapPrpos = state => {\r\n     return {\r\n       charactersCards: state.charactersCards,\r\n       isLoading: state.isLoading,\r\n       pagenumber: state.pagenumber,\r\n       team:state.team\r\n     }\r\n   }\r\nconst actions = dispatch =>{\r\n     return{\r\n     clearTeam:()=>dispatch(actionsList2.clearTeam())\r\n     }\r\n} \r\nexport default connect(mapPrpos,actions)(Team)","import * as actionList from \"../actionList\" \r\n\r\n const clrTeam = (payload)=>{\r\n     return {type:actionList.CLEAR_TEAM,payload}\r\n   }\r\n   \r\n   const clearTeam = () =>{\r\n     console.log(\"Clearing\");\r\n     \r\n   return dispatch =>{\r\n     \r\n        dispatch(clrTeam({\r\n         team:[]\r\n     }))\r\n   }\r\n   \r\n    \r\n    }\r\n\r\n   export {clearTeam} ","export const SET_CHAR = \"SET_CHAR\"\r\nexport const SET_CHAR_DETAILS = \"SET_CHAR_DETAILS\"\r\nexport const SAVE_CHAR = \"SAVE_CHAR\"\r\nexport const CLEAR_TEAM = \"CLEAR_TEAM\"","import React from \"react\";\r\nimport '../Header/Header.css';\r\nimport logo from \"../assets/img/logo.png\"\r\n/* import loginBgGif from '../assets/loginBg.gif' */\r\nimport Team from '../Team/Team'\r\nimport { connect } from \"react-redux\";\r\nconst Header = (props) => {\r\n    /* let isLoggedIn = false; */\r\n    /* function login() {\r\n        return <React.Fragment>\r\n            <div className=\"loginContainer\">\r\n                <div className=\"form\">\r\n                    <form onSubmit={(e) => loginUser(e)}>\r\n\r\n                        <span className=\"inputControl\">\r\n                            <label>Username:</label>\r\n                            <input type=\"text\" name=\"username\" placeholder=\"Game still in beta\" onChange={(e) => handleChange(e)} />\r\n                        </span>\r\n\r\n                        <span className=\"inputControl\">\r\n                            <label>Password:</label>\r\n                            <input type=\"password\" name=\"password\" placeholder=\"Sign in not requiered\" onChange={(e) => handleChange(e)} />\r\n                        </span>\r\n                        <span className=\"inputControls\">\r\n                            <input type=\"submit\" value=\"Sign In\" />\r\n                        </span>\r\n\r\n                    </form>\r\n                </div>\r\n                <img className=\"loginBgGif\" src={loginBgGif} alt=\"poooooo\"></img>\r\n            </div>\r\n        </React.Fragment>\r\n    } */\r\n    /* function loginUser(e) {\r\n        e.preventDefault();\r\n        isLoggedIn = !isLoggedIn\r\n\r\n    } */\r\n    /* function loginTrigger() {\r\n                  isLoggedIn = !isLoggedIn   \r\n    } */\r\n\r\n  /*   function handleChange(e) {\r\n        e.preventDefault();\r\n        let user = {\r\n            username: e.target.value\r\n        }\r\n\r\n    } */\r\n\r\n    function navBar() {\r\n\r\n        if (props.isLoggedIn) {\r\n            return <nav class=\"navbar navbar-dark bg-dark\" style={{justifyContent:\"flex-end\"}}>\r\n                            <button class=\"my-2 my-sm-0\" onClick={props.losgin}>Logout</button>\r\n                     </nav>\r\n\r\n        } else {\r\n\r\n            return <nav className=\"d-flex flex-row-reverse p-2 bd-highlight\">\r\n                            <button  onClick={props.login}>Login</button>\r\n                     </nav>\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n           <div>\r\n                {navBar()}\r\n            </div>\r\n            <div className=\"d-flex justify-content-center p-2 bd-highlight\">\r\n                <img src={logo} alt=\"Missing\"></img>\r\n            </div>\r\n           <div className=\"teamContainer\">\r\n           {props.team.length!==0?<Team team={props.team} remove={props.remove}></Team>:\"\"}\r\n           </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapPrpos = state => {\r\n    return {\r\n      charactersCards: state.charactersCards,\r\n      isLoading: state.isLoading,\r\n      pagenumber: state.pagenumber,\r\n      team:state.team\r\n    }\r\n  }\r\nexport default connect(mapPrpos,null)(Header);\r\n","import React, {Component} from 'react'\r\nimport Loader from '../Loader/Loader'\r\nimport {Link} from \"react-router-dom\";\r\nimport * as actionsList from '../store/actions'\r\n\r\nimport {connect} from 'react-redux'\r\nimport '../CharacterDetails/CharacterDetails.css'\r\nimport Header from '../Header/Header';\r\nclass CharacterDetails extends Component {\r\n  characterDetails;\r\n  state = {\r\n  }\r\n  \r\n  componentWillMount(){\r\n    console.log(this.props.match.params.id);\r\n    \r\n    this.props.getCharacharDetails(this.props.match.params.id)\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"in CHaracter Detail Props\", this.props);\r\n    \r\n    \r\n  }\r\n  \r\n  addCharacterToTeam = (character) => {\r\n    let team = JSON.parse(localStorage.getItem(\"team\"));\r\n    if(team.find(card=>card.id===character.id))\r\n    return\r\n    else\r\n    {\r\n      this.state.team.push(character)\r\n    localStorage.setItem(\"team\",JSON.stringify(this.state.team))\r\n    }\r\n    \r\n\r\n   }\r\n  render() {\r\n  \r\n        \r\n      return (\r\n        <div className=\"body\">\r\n           <Header ></Header>\r\n          {this.props.isLoadingDetails?\r\n          <div\r\n          ><table className=\"table text-light\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Character</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Location</th>\r\n                <th scope=\"col\">Species</th>\r\n                <th scope=\"col\">Gender</th>\r\n                <th scope=\"col\">Status</th>\r\n  \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">\r\n                  <img\r\n                    className=\"img img-thumbnail btn btn-dark\"\r\n                    src={this.props.characterDetails.image}\r\n                    alt=\"dsadsa\"></img>\r\n                </th>\r\n                <td>{this.props.characterDetails.name}</td>\r\n                <td>{this.props.characterDetails.location.name}</td>\r\n                <td>{this.props.characterDetails.species}</td>\r\n                <td>{this.props.characterDetails.gender}</td>\r\n                <td>{this.props.characterDetails.status}</td>\r\n  \r\n              </tr>\r\n  \r\n            </tbody>\r\n          </table>\r\n          <div >\r\n              <button className=\"btn btn-success\" onClick={() => this.props.saveCharaterInTeam(this.props.characterDetails)}>Add To Team</button>\r\n              <Link to={\"/\"+this.props.pagenumber}><button className=\"btn btn-primary\">Back To Characters Select</button></Link>\r\n          </div>\r\n        </div>:\r\n        <Loader type=\"hourglass\"></Loader>}\r\n    \r\n        </div>\r\n      )\r\n      \r\n  }\r\n}\r\nconst mapPrpos = state =>{\r\n  return {\r\n    characterDetails:state.characterDetails,\r\n    isLoadingDetails:state.isLoadingDetails,\r\n    pagenumber:state.pagenumber\r\n  }\r\n}\r\nconst actions = dispatch =>{\r\n  return {\r\n    getCharacharDetails:(id)=>dispatch(actionsList.getCharacharDetails(id)),\r\n    saveCharaterInTeam:(character)=>dispatch(actionsList.saveCharaterInTeam(character)),\r\n  }\r\n}\r\nexport default connect(mapPrpos,actions)(CharacterDetails);;","import * as actionList from \"./actionList\" \r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport Character from '../Character/Character';\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\nconst setChar = (payload)=>{\r\n     return {type:actionList.SET_CHAR,payload}\r\n}\r\n\r\nconst getCharachars = (payload)=>{\r\n  console.log(payload);\r\n  \r\n     let pagenumber = window.location.pathname.substr(1);  \r\n     return dispatch =>{\r\n          let cardsData;\r\n          axios\r\n            .get(`https://rickandmortyapi.com/api/character?page=${pagenumber}`)\r\n            .then((res) => {\r\n              /* if (this.state.characters.length === 0)  */\r\n              cardsData = res\r\n                .data\r\n                .results\r\n                .map(character => {\r\n                  return (\r\n                    <Link\r\n                      key={character.id}\r\n                      to={`/characterDetails/${character.id}`}\r\n                      className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 p-2 m-3 btn btn-warning card\"\r\n                      pagenumber={pagenumber}>\r\n                      <Character id={character.id} name={character.name} image={character.image}/>\r\n                    </Link>\r\n                  )\r\n                })\r\n              dispatch(setChar({\r\n\r\n                   cardsData,\r\n                   isLoading:true,\r\n                   pagenumber,\r\n                   payload\r\n\r\n               }))\r\n      \r\n              })\r\n     }\r\n}\r\nconst setCharDetails = (payload)=>{\r\n  return {type:actionList.SET_CHAR_DETAILS,payload}\r\n}\r\n\r\nconst getCharacharDetails = (id) =>{\r\n  \r\nreturn dispatch =>{\r\n  axios\r\n     .get(`https://rickandmortyapi.com/api/character/${id}`)\r\n     .then((res) => {\r\n       console.log(res.data);\r\n       dispatch(setCharDetails({\r\n        characterDetails:res.data,\r\n        isLoadingDetails:true,\r\n    }))\r\n     })\r\n}\r\n\r\n \r\n }\r\n\r\n const saveCharater = (payload)=>{\r\n  return {type:actionList.SAVE_CHAR,payload}\r\n}\r\n\r\nconst saveCharaterInTeam = (character) =>{\r\n  console.log(character);\r\n  \r\nreturn dispatch =>{\r\n  \r\n     dispatch(saveCharater({\r\n      character:[character]\r\n  }))\r\n}\r\n\r\n \r\n }\r\n\r\n\r\nexport {getCharachars,getCharacharDetails,saveCharaterInTeam};\r\n\r\n                                                                                                   ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Home.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Header from '../Header/Header';\r\nimport Loader from '../Loader/Loader';\r\nimport loginBgGif from '../assets/loginBg.gif'\r\nimport * as actionsList from '../store/actions'\r\n\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    willLogin: false,\r\n    isLoggedIn: false,\r\n    user: {},\r\n    currentPage: 1,\r\n  }\r\n  componentDidMount() {\r\n    this.props.getCharacters()\r\n    this.pagination()\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.pagenumber !== this.props.match.params.pagenumber) {\r\n      this.props.getCharacters()\r\n      console.log(this.props.characterDetails);\r\n      \r\n      return true\r\n\r\n    }\r\n\r\n  }\r\n  shouldComponentUpdate(prevProps, nextProps) {\r\n    return true\r\n  }\r\n\r\n  loginUser(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      willLogin: !this.state.willLogin,\r\n    })\r\n  }\r\n  willLogin() {\r\n    this.setState({\r\n      willLogin: !this.state.willLogin,\r\n      isLoggedIn: !this.state.isLoggedIn\r\n    })\r\n  }\r\n  loginForm(loginUser) {\r\n    return <React.Fragment>\r\n      <div className=\"loginContainer\">\r\n        <div className=\"form\">\r\n          <form onSubmit={(e)=>loginUser(e)}>\r\n\r\n            <span className=\"inputControl\">\r\n              <label>Username:</label>\r\n              <input type=\"text\" name=\"username\" placeholder=\"Game still in beta\" onChange={(e) => this.handleChange(e)} />\r\n            </span>\r\n\r\n            <span className=\"inputControl\">\r\n              <label>Password:</label>\r\n              <input type=\"password\" name=\"password\" placeholder=\"Sign in not requiered\" onChange={(e) => this.handleChange(e)} />\r\n            </span>\r\n            <span className=\"inputControls\">\r\n              <input type=\"submit\" value=\"Sign In\" />\r\n            </span>\r\n\r\n          </form>\r\n        </div>\r\n        <img className=\"loginBgGif\" src={loginBgGif} alt=\"poooooo\"></img>\r\n      </div>\r\n    </React.Fragment>\r\n  }\r\n  handleChange(e) {\r\n    e.preventDefault();\r\n    let user = {\r\n      username: e.target.value\r\n    }\r\n\r\n    this.setState({ user: user })\r\n  }\r\n  pagination() {\r\n    let pages = []\r\n    let numOfPages = 25;\r\n    let pagenumber = this.props.pagenumber;\r\n    pagenumber < numOfPages ? pages.push(<Link key={numOfPages - numOfPages} className={`page-link`} to={\"/\" + (parseInt(pagenumber) + 1)}>Next</Link>) : console.log();\r\n\r\n    for (let i = 1; i <= numOfPages; i++) {\r\n\r\n      if (pagenumber === i.toString())\r\n        pages.push(\r\n          <Link key={i} className={`page-link active`} to={\"/\" + i}>{i}</Link>\r\n        )\r\n      else\r\n        pages.push(\r\n          <Link key={i} className={`page-link`} to={\"/\" + i}>{i}</Link>\r\n        )\r\n    }\r\n    pagenumber > 1 ? pages.push(<Link key={numOfPages + 1} className={`page-link`} to={\"/\" + (parseInt(pagenumber) - 1)}>Prev</Link>) : console.log();\r\n    return pages\r\n  }\r\n\r\n  render() {\r\n    let isLoggedIn = this.state.isLoggedIn;\r\n    let willLogin = this.state.willLogin;\r\n    let user = this.state.user\r\n    let characterCards = this.props.charactersCards\r\n    let pages = this.pagination()\r\n    return (\r\n      <div className=\"body\">\r\n        {this.props.isLoading ?\r\n          <React.Fragment >\r\n            {willLogin? this.loginForm() : <div></div>}\r\n            {isLoggedIn ? <Header isLoggedIn={true} user={user} login={() => this.willLogin()}></Header> : <Header isLoggedIn={false} login={() => this.willLogin()}></Header>}\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n              {characterCards}\r\n            </div>\r\n            </div>\r\n            <nav aria-label=\"Page navigation example\" className=\"mt-5\">\r\n              <ul className=\"pagination\">\r\n                {pages}\r\n              </ul>\r\n            </nav>\r\n          </React.Fragment> :\r\n          <Loader type=\"circle\"></Loader>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapPrpos = state => {\r\n  return {\r\n    charactersCards: state.charactersCards,\r\n    isLoading: state.isLoading,\r\n    pagenumber: state.pagenumber,\r\n    characterDetails: state.characterDetails,\r\n  }\r\n}\r\nconst actions = dispatch => {\r\n  return {\r\n    getCharacters: () => dispatch(actionsList.getCharachars())\r\n  }\r\n}\r\nexport default connect(mapPrpos, actions)(Home);","import React, {Component} from 'react';\nimport './App.css';\nimport { Route, Switch} from \"react-router-dom\";\nimport CharacterDetails from './CharacterDetails/CharacterDetails';\nimport Home from './Home/Home';\n\nclass App extends Component {\n  \n\n  \n\n  render() {\n\n    return (\n      \n        <div className=\"App\">\n       \n          <Switch>\n             <Route path=\"/\" exact component={Home}/> \n             <Route path=\"/:pagenumber\" exact component={Home}/>  \n            <Route path=\"/characterDetails/:id\" component={CharacterDetails}/>\n          </Switch>\n        </div>\n    );\n  }\n}\nlocalStorage.setItem(\"team\",JSON.stringify([]))\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionsList  from \"./actionList\"\r\n\r\nconst initialState={\r\n    \r\n    isLoading:false,\r\n    isLoadingDetails:false,\r\n    charactersCards: [],\r\n    team:JSON.parse(localStorage.getItem(\"team\"))\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case actionsList.SET_CHAR:\r\n            return {\r\n                ...state,\r\n                charactersCards:action.payload.cardsData,\r\n                isLoading:action.payload.isLoading,\r\n                pagenumber:action.payload.pagenumber\r\n            }\r\n\r\n            case actionsList.SET_CHAR_DETAILS:\r\n                console.log(action.payload.isLoading);\r\n                \r\n            return {\r\n                ...state,\r\n                characterDetails:action.payload.characterDetails,\r\n                isLoadingDetails:action.payload.isLoadingDetails,\r\n            }\r\n\r\n            case actionsList.SAVE_CHAR:\r\n                console.log(action.payload.character);\r\n                let team = state.team.concat(action.payload.character);\r\n                localStorage.setItem(\"team\",JSON.stringify(team))\r\n            return {\r\n                ...state,\r\n                team:team\r\n            }\r\n\r\n            case actionsList.CLEAR_TEAM:\r\n                let empty = []\r\n            return {\r\n                ...state,\r\n                team:empty\r\n            }\r\n\r\n            \r\n        default:\r\n                return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n/* import $ from 'jquery'; */\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware,compose} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './store/reducer'\n\n//Middleware\nconst logger = store=>{\n     return next => {\n          return action => {\n               console.log('Middleware Action Dispatching',action);\n               console.log('Middleware Store',store.getState());\n\n               return next(action);\n          }\n     }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst myStore = createStore(reducer,composeEnhancers(applyMiddleware(logger,thunk)))\nReactDOM.render(<BrowserRouter><Provider store={myStore}><App /></Provider></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}